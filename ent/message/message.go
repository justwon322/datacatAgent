// Code generated by ent, DO NOT EDIT.

package message

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the message type in the database.
	Label = "message"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "pid"
	// FieldPayload holds the string denoting the payload field in the database.
	FieldPayload = "payload"
	// FieldSent holds the string denoting the sent field in the database.
	FieldSent = "sent"
	// FieldResent holds the string denoting the resent field in the database.
	FieldResent = "resent"
	// FieldSentAt holds the string denoting the sentat field in the database.
	FieldSentAt = "sentAt"
	// FieldJobId holds the string denoting the jobid field in the database.
	FieldJobId = "job_id"
	// Table holds the table name of the message in the database.
	Table = "messages"
)

// Columns holds all SQL columns for message fields.
var Columns = []string{
	FieldID,
	FieldPayload,
	FieldSent,
	FieldResent,
	FieldSentAt,
	FieldJobId,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultSentAt holds the default value on creation for the "sentAt" field.
	DefaultSentAt func() time.Time
	// UpdateDefaultSentAt holds the default value on update for the "sentAt" field.
	UpdateDefaultSentAt func() time.Time
)

// OrderOption defines the ordering options for the Message queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByPayload orders the results by the payload field.
func ByPayload(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPayload, opts...).ToFunc()
}

// BySent orders the results by the sent field.
func BySent(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSent, opts...).ToFunc()
}

// ByResent orders the results by the resent field.
func ByResent(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldResent, opts...).ToFunc()
}

// BySentAt orders the results by the sentAt field.
func BySentAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSentAt, opts...).ToFunc()
}

// ByJobId orders the results by the jobId field.
func ByJobId(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldJobId, opts...).ToFunc()
}
