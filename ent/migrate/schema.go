// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CategoryMainColumns holds the columns for the "category_main" table.
	CategoryMainColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "program", Type: field.TypeString},
		{Name: "updatedAt", Type: field.TypeTime},
		{Name: "createdAt", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "priority", Type: field.TypeInt, Default: 0},
		{Name: "updatedById", Type: field.TypeInt, Default: 0},
		{Name: "createdById", Type: field.TypeInt, Default: 0},
	}
	// CategoryMainTable holds the schema information for the "category_main" table.
	CategoryMainTable = &schema.Table{
		Name:       "category_main",
		Columns:    CategoryMainColumns,
		PrimaryKey: []*schema.Column{CategoryMainColumns[0]},
	}
	// CategorySubColumns holds the columns for the "category_sub" table.
	CategorySubColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "program", Type: field.TypeString},
		{Name: "updatedAt", Type: field.TypeTime},
		{Name: "createdAt", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "updatedById", Type: field.TypeInt},
		{Name: "createdById", Type: field.TypeInt},
		{Name: "categoryMainId", Type: field.TypeInt32},
	}
	// CategorySubTable holds the schema information for the "category_sub" table.
	CategorySubTable = &schema.Table{
		Name:       "category_sub",
		Columns:    CategorySubColumns,
		PrimaryKey: []*schema.Column{CategorySubColumns[0]},
	}
	// ExecutionLogColumns holds the columns for the "execution_log" table.
	ExecutionLogColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "status", Type: field.TypeInt},
		{Name: "result", Type: field.TypeString},
		{Name: "executedAt", Type: field.TypeTime},
		{Name: "scriptId", Type: field.TypeInt},
	}
	// ExecutionLogTable holds the schema information for the "execution_log" table.
	ExecutionLogTable = &schema.Table{
		Name:       "execution_log",
		Columns:    ExecutionLogColumns,
		PrimaryKey: []*schema.Column{ExecutionLogColumns[0]},
	}
	// JobColumns holds the columns for the "job" table.
	JobColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "program", Type: field.TypeString},
		{Name: "updatedAt", Type: field.TypeTime},
		{Name: "createdAt", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "updatedById", Type: field.TypeInt},
		{Name: "createdById", Type: field.TypeInt},
		{Name: "categorySubId", Type: field.TypeInt},
	}
	// JobTable holds the schema information for the "job" table.
	JobTable = &schema.Table{
		Name:       "job",
		Columns:    JobColumns,
		PrimaryKey: []*schema.Column{JobColumns[0]},
	}
	// MessagesColumns holds the columns for the "messages" table.
	MessagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "payload", Type: field.TypeString},
		{Name: "sent", Type: field.TypeInt},
		{Name: "resent", Type: field.TypeInt},
		{Name: "sentAt", Type: field.TypeTime},
		{Name: "job_id", Type: field.TypeInt},
	}
	// MessagesTable holds the schema information for the "messages" table.
	MessagesTable = &schema.Table{
		Name:       "messages",
		Columns:    MessagesColumns,
		PrimaryKey: []*schema.Column{MessagesColumns[0]},
	}
	// MessageMailsColumns holds the columns for the "message_mails" table.
	MessageMailsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "seq", Type: field.TypeInt64, Unique: true},
		{Name: "mail_subject", Type: field.TypeString},
		{Name: "mail_contents", Type: field.TypeString},
		{Name: "mail_gb", Type: field.TypeInt},
		{Name: "mail_recv_group", Type: field.TypeString},
		{Name: "sent", Type: field.TypeInt},
		{Name: "sentAt", Type: field.TypeTime},
		{Name: "created_by_id", Type: field.TypeInt},
		{Name: "createdAt", Type: field.TypeTime},
		{Name: "updated_by_id", Type: field.TypeInt},
		{Name: "updatedAt", Type: field.TypeTime},
	}
	// MessageMailsTable holds the schema information for the "message_mails" table.
	MessageMailsTable = &schema.Table{
		Name:       "message_mails",
		Columns:    MessageMailsColumns,
		PrimaryKey: []*schema.Column{MessageMailsColumns[0]},
	}
	// ScriptColumns holds the columns for the "script" table.
	ScriptColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "program", Type: field.TypeString},
		{Name: "updatedAt", Type: field.TypeTime},
		{Name: "createdAt", Type: field.TypeTime},
		{Name: "jobId", Type: field.TypeInt},
		{Name: "hostname", Type: field.TypeString},
		{Name: "command", Type: field.TypeString},
		{Name: "comment", Type: field.TypeString},
		{Name: "usable", Type: field.TypeInt},
		{Name: "repeatInterval", Type: field.TypeInt},
		{Name: "updatedById", Type: field.TypeInt},
		{Name: "createdById", Type: field.TypeInt},
		{Name: "regionId", Type: field.TypeInt},
		{Name: "managerId", Type: field.TypeInt},
		{Name: "managerGroupId", Type: field.TypeInt},
		{Name: "startTime", Type: field.TypeString},
		{Name: "endTime", Type: field.TypeString},
	}
	// ScriptTable holds the schema information for the "script" table.
	ScriptTable = &schema.Table{
		Name:       "script",
		Columns:    ScriptColumns,
		PrimaryKey: []*schema.Column{ScriptColumns[0]},
	}
	// UserColumns holds the columns for the "user" table.
	UserColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "createdAt", Type: field.TypeTime},
		{Name: "updatedAt", Type: field.TypeTime},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "realname", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
		{Name: "role", Type: field.TypeEnum, Enums: []string{"Reader", "Writer", "Admin"}, Default: "Reader"},
		{Name: "lastAccessed", Type: field.TypeTime},
		{Name: "userGroupId", Type: field.TypeInt},
	}
	// UserTable holds the schema information for the "user" table.
	UserTable = &schema.Table{
		Name:       "user",
		Columns:    UserColumns,
		PrimaryKey: []*schema.Column{UserColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CategoryMainTable,
		CategorySubTable,
		ExecutionLogTable,
		JobTable,
		MessagesTable,
		MessageMailsTable,
		ScriptTable,
		UserTable,
	}
)

func init() {
	CategoryMainTable.Annotation = &entsql.Annotation{
		Table: "category_main",
	}
	CategorySubTable.Annotation = &entsql.Annotation{
		Table: "category_sub",
	}
	ExecutionLogTable.Annotation = &entsql.Annotation{
		Table: "execution_log",
	}
	JobTable.Annotation = &entsql.Annotation{
		Table: "job",
	}
	ScriptTable.Annotation = &entsql.Annotation{
		Table: "script",
	}
	UserTable.Annotation = &entsql.Annotation{
		Table: "user",
	}
}
