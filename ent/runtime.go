//go:build tools
// +build tools

// Code generated by ent, DO NOT EDIT.

package ent

import (
	"datacatAgent/ent/categorymain"
	"datacatAgent/ent/categorysub"
	"datacatAgent/ent/executionlog"
	"datacatAgent/ent/job"
	"datacatAgent/ent/message"
	"datacatAgent/ent/messagemail"
	"datacatAgent/ent/schema"
	"datacatAgent/ent/script"
	"datacatAgent/ent/user"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	categorymainFields := schema.CategoryMain{}.Fields()
	_ = categorymainFields
	// categorymainDescUpdatedAt is the schema descriptor for updatedAt field.
	categorymainDescUpdatedAt := categorymainFields[2].Descriptor()
	// categorymain.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	categorymain.DefaultUpdatedAt = categorymainDescUpdatedAt.Default.(func() time.Time)
	// categorymain.UpdateDefaultUpdatedAt holds the default value on update for the updatedAt field.
	categorymain.UpdateDefaultUpdatedAt = categorymainDescUpdatedAt.UpdateDefault.(func() time.Time)
	// categorymainDescCreatedAt is the schema descriptor for createdAt field.
	categorymainDescCreatedAt := categorymainFields[3].Descriptor()
	// categorymain.DefaultCreatedAt holds the default value on creation for the createdAt field.
	categorymain.DefaultCreatedAt = categorymainDescCreatedAt.Default.(func() time.Time)
	// categorymainDescPriority is the schema descriptor for priority field.
	categorymainDescPriority := categorymainFields[5].Descriptor()
	// categorymain.DefaultPriority holds the default value on creation for the priority field.
	categorymain.DefaultPriority = categorymainDescPriority.Default.(int)
	// categorymainDescUpdatedById is the schema descriptor for updatedById field.
	categorymainDescUpdatedById := categorymainFields[6].Descriptor()
	// categorymain.DefaultUpdatedById holds the default value on creation for the updatedById field.
	categorymain.DefaultUpdatedById = categorymainDescUpdatedById.Default.(int)
	// categorymainDescCreatedById is the schema descriptor for createdById field.
	categorymainDescCreatedById := categorymainFields[7].Descriptor()
	// categorymain.DefaultCreatedById holds the default value on creation for the createdById field.
	categorymain.DefaultCreatedById = categorymainDescCreatedById.Default.(int)
	categorysubFields := schema.CategorySub{}.Fields()
	_ = categorysubFields
	// categorysubDescUpdatedAt is the schema descriptor for updatedAt field.
	categorysubDescUpdatedAt := categorysubFields[2].Descriptor()
	// categorysub.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	categorysub.DefaultUpdatedAt = categorysubDescUpdatedAt.Default.(func() time.Time)
	// categorysub.UpdateDefaultUpdatedAt holds the default value on update for the updatedAt field.
	categorysub.UpdateDefaultUpdatedAt = categorysubDescUpdatedAt.UpdateDefault.(func() time.Time)
	// categorysubDescCreatedAt is the schema descriptor for createdAt field.
	categorysubDescCreatedAt := categorysubFields[3].Descriptor()
	// categorysub.DefaultCreatedAt holds the default value on creation for the createdAt field.
	categorysub.DefaultCreatedAt = categorysubDescCreatedAt.Default.(func() time.Time)
	executionlogFields := schema.ExecutionLog{}.Fields()
	_ = executionlogFields
	// executionlogDescExecutedAt is the schema descriptor for executedAt field.
	executionlogDescExecutedAt := executionlogFields[3].Descriptor()
	// executionlog.DefaultExecutedAt holds the default value on creation for the executedAt field.
	executionlog.DefaultExecutedAt = executionlogDescExecutedAt.Default.(func() time.Time)
	jobFields := schema.Job{}.Fields()
	_ = jobFields
	// jobDescUpdatedAt is the schema descriptor for updatedAt field.
	jobDescUpdatedAt := jobFields[2].Descriptor()
	// job.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	job.DefaultUpdatedAt = jobDescUpdatedAt.Default.(func() time.Time)
	// job.UpdateDefaultUpdatedAt holds the default value on update for the updatedAt field.
	job.UpdateDefaultUpdatedAt = jobDescUpdatedAt.UpdateDefault.(func() time.Time)
	// jobDescCreatedAt is the schema descriptor for createdAt field.
	jobDescCreatedAt := jobFields[3].Descriptor()
	// job.DefaultCreatedAt holds the default value on creation for the createdAt field.
	job.DefaultCreatedAt = jobDescCreatedAt.Default.(func() time.Time)
	messageFields := schema.Message{}.Fields()
	_ = messageFields
	// messageDescSentAt is the schema descriptor for sentAt field.
	messageDescSentAt := messageFields[4].Descriptor()
	// message.DefaultSentAt holds the default value on creation for the sentAt field.
	message.DefaultSentAt = messageDescSentAt.Default.(func() time.Time)
	// message.UpdateDefaultSentAt holds the default value on update for the sentAt field.
	message.UpdateDefaultSentAt = messageDescSentAt.UpdateDefault.(func() time.Time)
	messagemailFields := schema.MessageMail{}.Fields()
	_ = messagemailFields
	// messagemailDescSentAt is the schema descriptor for sentAt field.
	messagemailDescSentAt := messagemailFields[6].Descriptor()
	// messagemail.DefaultSentAt holds the default value on creation for the sentAt field.
	messagemail.DefaultSentAt = messagemailDescSentAt.Default.(func() time.Time)
	// messagemail.UpdateDefaultSentAt holds the default value on update for the sentAt field.
	messagemail.UpdateDefaultSentAt = messagemailDescSentAt.UpdateDefault.(func() time.Time)
	// messagemailDescCreatedAt is the schema descriptor for createdAt field.
	messagemailDescCreatedAt := messagemailFields[8].Descriptor()
	// messagemail.DefaultCreatedAt holds the default value on creation for the createdAt field.
	messagemail.DefaultCreatedAt = messagemailDescCreatedAt.Default.(func() time.Time)
	// messagemailDescUpdatedAt is the schema descriptor for updatedAt field.
	messagemailDescUpdatedAt := messagemailFields[10].Descriptor()
	// messagemail.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	messagemail.DefaultUpdatedAt = messagemailDescUpdatedAt.Default.(func() time.Time)
	// messagemail.UpdateDefaultUpdatedAt holds the default value on update for the updatedAt field.
	messagemail.UpdateDefaultUpdatedAt = messagemailDescUpdatedAt.UpdateDefault.(func() time.Time)
	scriptFields := schema.Script{}.Fields()
	_ = scriptFields
	// scriptDescUpdatedAt is the schema descriptor for updatedAt field.
	scriptDescUpdatedAt := scriptFields[2].Descriptor()
	// script.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	script.DefaultUpdatedAt = scriptDescUpdatedAt.Default.(func() time.Time)
	// script.UpdateDefaultUpdatedAt holds the default value on update for the updatedAt field.
	script.UpdateDefaultUpdatedAt = scriptDescUpdatedAt.UpdateDefault.(func() time.Time)
	// scriptDescCreatedAt is the schema descriptor for createdAt field.
	scriptDescCreatedAt := scriptFields[3].Descriptor()
	// script.DefaultCreatedAt holds the default value on creation for the createdAt field.
	script.DefaultCreatedAt = scriptDescCreatedAt.Default.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for createdAt field.
	userDescCreatedAt := userFields[1].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the createdAt field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updatedAt field.
	userDescUpdatedAt := userFields[2].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updatedAt field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescUsername is the schema descriptor for username field.
	userDescUsername := userFields[3].Descriptor()
	// user.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	user.UsernameValidator = userDescUsername.Validators[0].(func(string) error)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[4].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
	// userDescRealname is the schema descriptor for realname field.
	userDescRealname := userFields[5].Descriptor()
	// user.RealnameValidator is a validator for the "realname" field. It is called by the builders before save.
	user.RealnameValidator = userDescRealname.Validators[0].(func(string) error)
	// userDescPhone is the schema descriptor for phone field.
	userDescPhone := userFields[6].Descriptor()
	// user.PhoneValidator is a validator for the "phone" field. It is called by the builders before save.
	user.PhoneValidator = userDescPhone.Validators[0].(func(string) error)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[7].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
}
